type User {
  id: ID!
  username: String!
  monitoredEndpoint: [MonitoredEndpoint!]!
  createdAt: String!
  updatedAt: String!
}

type MonitoredEndpoint {
  id: ID!
  name: String!
  url: String!
  monitoredInterval: Int!
  owner: User!
  monitoringResult(first: Int = 10): [MonitoringResult!]!
  createdAt: String!
  updatedAt: String!
  checkedAt: String
}

type MonitoringResult {
  id: ID!
  statusCode: Int!
  payload: String!
  monitoredEndpoint: MonitoredEndpoint!
  createdAt: String!
  updatedAt: String!
  checkedAt: String
}

input SignUpInput {
  username: String!
  email: String!
  password: String!
}

input LoginInput {
  email: String!
  password: String!
}

input MonitoredEndpointInput {
  name: String!
  url: String!
  monitoredInterval: Int!
  disabled: Boolean
}

input UpdateMonitoredEndpointInput {
  id: ID!
  name: String!
  url: String!
  monitoredInterval: Int!
  disabled: Boolean
}

type AuthPayload {
  id: ID!
  username: String!
  email: String!
  jwt: String!
}

type Query {
  monitoredEndpoint(id: ID!): MonitoredEndpoint!
  monitoredEndpoints: [MonitoredEndpoint!]!
  findMonitoredEndpoints(url: String!): [MonitoredEndpoint!]!
}

type Mutation {
  signup(signUpInput: SignUpInput): AuthPayload!
  login(loginInput: LoginInput): AuthPayload!
  createMonitoredEndpoint(
    monitoredEndpointInput: MonitoredEndpointInput
  ): MonitoredEndpoint!
  updateMonitoredEndpoint(
    updateMonitoredEndpointInput: UpdateMonitoredEndpointInput
  ): MonitoredEndpoint!
}
